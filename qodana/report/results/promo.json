{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Local 'var' is never modified and can be declared as 'val'",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Variable is never modified, so it can be declared using 'val'",
  "detailsInfo": "Reports local variables declared with the `var` keyword that are never modified.\n\nKotlin encourages to declare practically immutable variables using the `val` keyword, ensuring that their value will never change.\n\n**Example:**\n\n\n      fun example() {\n          var primeNumbers = listOf(1, 2, 3, 5, 7, 11, 13)\n          var fibonacciNumbers = listOf(1, 1, 2, 3, 5, 8, 13)\n          print(\"Same numbers: \" + primeNumbers.intersect(fibonacciNumbers))\n      }\n\nThe quick-fix replaces the `var` keyword with `val`:\n\n\n      fun example() {\n          val primeNumbers = listOf(1, 2, 3, 5, 7, 11, 13)\n          val fibonacciNumbers = listOf(1, 1, 2, 3, 5, 8, 13)\n          print(\"Same numbers: \" + primeNumbers.intersect(fibonacciNumbers))\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-context/src/main/kotlin/com/asyncapi/kotlinasyncapi/context/annotation/processor/AsyncApiComponentProcessor.kt",
      "language": "kotlin",
      "line": 18,
      "offset": 21,
      "length": 3,
      "code": {
        "startLine": 16,
        "length": 3,
        "offset": 145,
        "surroundingCode": "            channels {\n                context.functions.filter { it.hasAnnotation<Channel>() }.forEach { currentFunction ->\n                    var currentAnnotation = currentFunction.findAnnotation<Channel>()!!\n                    currentAnnotation.toChannel()\n                        .apply {"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-context",
    "inspectionName": "CanBeVal"
  },
  "hash": "499fbd606c582a5bcc082630315ad29a32e708cd21dcdab88cc3b28ae2902763"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Nested lambda has shadowed implicit parameter",
  "tags": [
    "kotlin"
  ],
  "severity": "Moderate",
  "comment": "Implicit parameter 'it' of enclosing lambda is shadowed",
  "detailsInfo": "Reports nested lambdas with shadowed implicit parameters.\n\n**Example:**\n\n\n    fun foo(listOfLists: List<List<String>>) {\n      listOfLists.forEach {\n        it.forEach {\n          println(it)\n        }\n      }\n    }\n\nAfter the quick-fix is applied:\n\n\n    fun foo(listOfLists: List<List<String>>) {\n      listOfLists.forEach {\n        it.forEach { it1 ->\n          println(it1)\n        }\n      }\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-spring-web/src/main/kotlin/com/asyncapi/kotlinasyncapi/springweb/AsyncApiAutoConfiguration.kt",
      "language": "kotlin",
      "line": 147,
      "offset": 64,
      "length": 2,
      "code": {
        "startLine": 145,
        "length": 2,
        "offset": 195,
        "surroundingCode": "        context.getResource(asyncApiProperties.script.sourcePath).takeIf { it.exists() }?.let {\n            AsyncApiExtension.from(\n                script = it.inputStream.bufferedReader().use { it.readText() }.toScriptSource()\n            )\n        }"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-spring-web",
    "inspectionName": "NestedLambdaShadowedImplicitParameter"
  },
  "hash": "b1419ff3e20a3e0dc6d78b81d2e78bed96e04faddc890a42625e89cbbfb88ac7"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"solace\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/ChannelBinding.kt",
      "language": "kotlin",
      "line": 20,
      "offset": 9,
      "length": 6,
      "code": {
        "startLine": 18,
        "length": 6,
        "offset": 152,
        "surroundingCode": "    val jms: ChannelBinding.JMS = ChannelBinding.JMS(isDefault = true),\n    val sns: ChannelBinding.SNS = ChannelBinding.SNS(isDefault = true),\n    val solace: ChannelBinding.Solace = ChannelBinding.Solace(isDefault = true),\n    val sqs: ChannelBinding.SQS = ChannelBinding.SQS(isDefault = true),\n    val stomp: ChannelBinding.STOMP = ChannelBinding.STOMP(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "14d1307b4cfb42c00daf1268bd59c8dcc6df13903ac9be9f4b379db515beb52f"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"mqtt5\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 56,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 54,
        "length": 5,
        "offset": 77,
        "surroundingCode": "        ServerBinding.MQTT().apply(build).also { mqtt = it }\n\n    inline fun mqtt5(build: ServerBinding.MQTT5.() -> Unit): ServerBinding.MQTT5 =\n        ServerBinding.MQTT5.apply(build).also { mqtt5 = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "18b3cbe1ca57e3ca366fa21275f116c82eeafd383a3c3463382d6800ab5e5e60"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"multiEndpointServer\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 160,
      "offset": 13,
      "length": 19,
      "code": {
        "startLine": 158,
        "length": 19,
        "offset": 56,
        "surroundingCode": "            value.also { cipherSpec = it }\n\n        fun multiEndpointServer(value: Boolean): Boolean =\n            value.also { multiEndpointServer = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "1b0f64969233bd736a239cc73fee501dadce838c0f45389566858dacc26738cb"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"anypointmq\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 44,
      "offset": 16,
      "length": 10,
      "code": {
        "startLine": 42,
        "length": 10,
        "offset": 77,
        "surroundingCode": "        ServerBinding.Kafka.apply(build).also { kafka = it }\n\n    inline fun anypointmq(build: ServerBinding.AnypointMQ.() -> Unit): ServerBinding.AnypointMQ =\n        ServerBinding.AnypointMQ.apply(build).also { anypointmq = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "1faa322726f52022cc4560de5e54d9f2c5ac31a226417c92da58cff048083d39"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"bindingsRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/channel/MessageTrait.kt",
      "language": "kotlin",
      "line": 83,
      "offset": 16,
      "length": 11,
      "code": {
        "startLine": 81,
        "length": 11,
        "offset": 78,
        "surroundingCode": "        MessageBindings().apply(build).also { bindings = it }\n\n    inline fun bindingsRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { bindings = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "26c24ea3130c4ae832dbfed143edb5add079e95d3f0d0de5ebe84fd8c09a4d13"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"sns\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 65,
      "offset": 16,
      "length": 3,
      "code": {
        "startLine": 63,
        "length": 3,
        "offset": 73,
        "surroundingCode": "        ServerBinding.JMS.apply(build).also { jms = it }\n\n    inline fun sns(build: ServerBinding.SNS.() -> Unit): ServerBinding.SNS =\n        ServerBinding.SNS.apply(build).also { sns = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "2a25f1ac83855c1e74189965ffe5eb6cd4d10f42bac0fc7eb4e95f6f69f0ca4c"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"mqtt5\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/ChannelBinding.kt",
      "language": "kotlin",
      "line": 16,
      "offset": 9,
      "length": 5,
      "code": {
        "startLine": 14,
        "length": 5,
        "offset": 161,
        "surroundingCode": "    val amqp1: ChannelBinding.AMQP1 = ChannelBinding.AMQP1(isDefault = true),\n    val mqtt: ChannelBinding.MQTT = ChannelBinding.MQTT(isDefault = true),\n    val mqtt5: ChannelBinding.MQTT5 = ChannelBinding.MQTT5(isDefault = true),\n    val nats: ChannelBinding.NATS = ChannelBinding.NATS(isDefault = true),\n    val jms: ChannelBinding.JMS = ChannelBinding.JMS(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "2c4bde1cf4980c1e0b589e4472e88a84748e306b05bb026448325de945cd51d3"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"jms\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/ChannelBinding.kt",
      "language": "kotlin",
      "line": 18,
      "offset": 9,
      "length": 3,
      "code": {
        "startLine": 16,
        "length": 3,
        "offset": 161,
        "surroundingCode": "    val mqtt5: ChannelBinding.MQTT5 = ChannelBinding.MQTT5(isDefault = true),\n    val nats: ChannelBinding.NATS = ChannelBinding.NATS(isDefault = true),\n    val jms: ChannelBinding.JMS = ChannelBinding.JMS(isDefault = true),\n    val sns: ChannelBinding.SNS = ChannelBinding.SNS(isDefault = true),\n    val solace: ChannelBinding.Solace = ChannelBinding.Solace(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "4092a6c14ab87ce19f515657ce1d2676d5f1e3487598b5a8bc38a39870601d79"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"heartBeatInterval\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 163,
      "offset": 13,
      "length": 17,
      "code": {
        "startLine": 161,
        "length": 17,
        "offset": 65,
        "surroundingCode": "            value.also { multiEndpointServer = it }\n\n        fun heartBeatInterval(value: Int): Int =\n            value.also { heartBeatInterval = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "459134a3d4c7914c9f286c145f363b0c25973dd80fe5a5a1f07c3b2265a88cd7"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"msgVpn\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 139,
      "offset": 13,
      "length": 6,
      "code": {
        "startLine": 137,
        "length": 6,
        "offset": 60,
        "surroundingCode": "            value.also { bindingVersion = it }\n\n        fun msgVpn(value: String): String =\n            value.also { msgVpn = it }\n    }"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "487ccf7e145a972ce7e0c940693216e87134b04abeb70e05531036eaa7574b21"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"correlationIdRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/channel/MessageTrait.kt",
      "language": "kotlin",
      "line": 50,
      "offset": 16,
      "length": 16,
      "code": {
        "startLine": 48,
        "length": 16,
        "offset": 81,
        "surroundingCode": "        CorrelationID().apply(build).also { correlationId = it }\n\n    inline fun correlationIdRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { correlationId = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "49744914a2a76b98634e3d00e8d1ddd98794941b302d01132119f6a63b3d4c3f"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"mqtt\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/ChannelBinding.kt",
      "language": "kotlin",
      "line": 15,
      "offset": 9,
      "length": 4,
      "code": {
        "startLine": 13,
        "length": 4,
        "offset": 161,
        "surroundingCode": "    val amqp: ChannelBinding.AMQP = ChannelBinding.AMQP(isDefault = true),\n    val amqp1: ChannelBinding.AMQP1 = ChannelBinding.AMQP1(isDefault = true),\n    val mqtt: ChannelBinding.MQTT = ChannelBinding.MQTT(isDefault = true),\n    val mqtt5: ChannelBinding.MQTT5 = ChannelBinding.MQTT5(isDefault = true),\n    val nats: ChannelBinding.NATS = ChannelBinding.NATS(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "5716cb6a25595fd8fe844d39065bfbf5157cc07c1d2068155aa87a76e946d35b"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"cipherSpec\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 157,
      "offset": 13,
      "length": 10,
      "code": {
        "startLine": 155,
        "length": 10,
        "offset": 66,
        "surroundingCode": "            value.also { ccdtQueueManagerName = it }\n\n        fun cipherSpec(value: String): String =\n            value.also { cipherSpec = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "575066df2ec66fd4dcb0c9f81600b2fbc641111990bc2669dc447f4d2e7ec73f"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"kafka\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 41,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 39,
        "length": 5,
        "offset": 79,
        "surroundingCode": "        ServerBinding.WebSockets.apply(build).also { ws = it }\n\n    inline fun kafka(build: ServerBinding.Kafka.() -> Unit): ServerBinding.Kafka =\n        ServerBinding.Kafka.apply(build).also { kafka = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "5917a11809b9f66864ca88057b659ce37a190b57d72a982fba4a3d642fe453a9"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"sqs\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/ChannelBinding.kt",
      "language": "kotlin",
      "line": 21,
      "offset": 9,
      "length": 3,
      "code": {
        "startLine": 19,
        "length": 3,
        "offset": 161,
        "surroundingCode": "    val sns: ChannelBinding.SNS = ChannelBinding.SNS(isDefault = true),\n    val solace: ChannelBinding.Solace = ChannelBinding.Solace(isDefault = true),\n    val sqs: ChannelBinding.SQS = ChannelBinding.SQS(isDefault = true),\n    val stomp: ChannelBinding.STOMP = ChannelBinding.STOMP(isDefault = true),\n    val redis: ChannelBinding.Redis = ChannelBinding.Redis(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "618770f6585770add5e35bd5acf1ffd8b38b149a2fa6590d8f45807f4fb4486e"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"amqp1\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 50,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 48,
        "length": 5,
        "offset": 75,
        "surroundingCode": "        ServerBinding.AMQP.apply(build).also { amqp = it }\n\n    inline fun amqp1(build: ServerBinding.AMQP1.() -> Unit): ServerBinding.AMQP1 =\n        ServerBinding.AMQP1.apply(build).also { amqp1 = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "6727fe076dd8931bd1d13c6f88049d6ac0f784cee60d991a343f530b92321f05"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"jms\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 62,
      "offset": 16,
      "length": 3,
      "code": {
        "startLine": 60,
        "length": 3,
        "offset": 75,
        "surroundingCode": "        ServerBinding.NATS.apply(build).also { nats = it }\n\n    inline fun jms(build: ServerBinding.JMS.() -> Unit): ServerBinding.JMS =\n        ServerBinding.JMS.apply(build).also { jms = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "7847b80e1e5edf9d1c3eaf8fe6d9753a3f1e4ffce875708a07a37dae7661e9cd"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"solace\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 68,
      "offset": 16,
      "length": 6,
      "code": {
        "startLine": 66,
        "length": 6,
        "offset": 73,
        "surroundingCode": "        ServerBinding.SNS.apply(build).also { sns = it }\n\n    inline fun solace(build: ServerBinding.Solace.() -> Unit): ServerBinding.Solace =\n        ServerBinding.Solace().apply(build).also { solace = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "78e52e9b640deaa3478138fdb8c2fe8af5e51cc2696efe84a54a76c1e1a0fdb7"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"redis\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/ChannelBinding.kt",
      "language": "kotlin",
      "line": 23,
      "offset": 9,
      "length": 5,
      "code": {
        "startLine": 21,
        "length": 5,
        "offset": 158,
        "surroundingCode": "    val sqs: ChannelBinding.SQS = ChannelBinding.SQS(isDefault = true),\n    val stomp: ChannelBinding.STOMP = ChannelBinding.STOMP(isDefault = true),\n    val redis: ChannelBinding.Redis = ChannelBinding.Redis(isDefault = true),\n    val mercure: ChannelBinding.Mercure = ChannelBinding.Mercure(isDefault = true),\n    val ibmmq: ChannelBinding.IBMMQ = ChannelBinding.IBMMQ(isDefault = true)"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "7c7c1d4ae1b6593b2fd7aa1c3c23a7870222b4aa4665d6139250e96ece013408"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"stomp\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 74,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 72,
        "length": 5,
        "offset": 73,
        "surroundingCode": "        ServerBinding.SQS.apply(build).also { sqs = it }\n\n    inline fun stomp(build: ServerBinding.STOMP.() -> Unit): ServerBinding.STOMP =\n        ServerBinding.STOMP.apply(build).also { stomp = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "7eca331adc5b632c358726a011441926ec39675f12a69e76f53050d808f5d7f4"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"headersRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/channel/MessageTrait.kt",
      "language": "kotlin",
      "line": 44,
      "offset": 16,
      "length": 10,
      "code": {
        "startLine": 42,
        "length": 10,
        "offset": 68,
        "surroundingCode": "        Schema().apply(build).also { headers = it }\n\n    inline fun headersRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { headers = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "9356df4ee974291848485b34c904b19d1b5a93bfabec575ecfe12d807a399a99"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"ibmmq\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 83,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 81,
        "length": 5,
        "offset": 81,
        "surroundingCode": "        ServerBinding.Mercure.apply(build).also { mercure = it }\n\n    inline fun ibmmq(build: ServerBinding.IBMMQ.() -> Unit): ServerBinding.IBMMQ =\n        ServerBinding.IBMMQ().apply(build).also { ibmmq = it }\n}"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "966c41887417d5af44c484fcfb31c327389dc33f2f2882390e695b716320272e"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"variable\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerVariable.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 16,
      "length": 8,
      "code": {
        "startLine": 6,
        "length": 8,
        "offset": 104,
        "surroundingCode": "@AsyncApiComponent\nclass ReferencableServerVariablesMap : LinkedHashMap<String, Any>() {\n    inline fun variable(key: String, build: ServerVariable.() -> Unit): ServerVariable =\n        ServerVariable().apply(build).also { put(key, it) }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "9a8802d0a53a24c00bfb040577b49cb4745a20194eff84011dc7d214f0ac896d"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"ws\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 38,
      "offset": 16,
      "length": 2,
      "code": {
        "startLine": 36,
        "length": 2,
        "offset": 75,
        "surroundingCode": "        ServerBinding.HTTP.apply(build).also { http = it }\n\n    inline fun ws(build: ServerBinding.WebSockets.() -> Unit): ServerBinding.WebSockets =\n        ServerBinding.WebSockets.apply(build).also { ws = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "9b2464dd79d64f8747d2826ade52f2e68caf0d2cb86423e5a100b4c79a6bd5df"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"kafka\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/ChannelBinding.kt",
      "language": "kotlin",
      "line": 11,
      "offset": 9,
      "length": 5,
      "code": {
        "startLine": 9,
        "length": 5,
        "offset": 168,
        "surroundingCode": "    val http: ChannelBinding.HTTP = ChannelBinding.HTTP(isDefault = true),\n    val ws: ChannelBinding.WebSockets = ChannelBinding.WebSockets(isDefault = true),\n    val kafka: ChannelBinding.Kafka = ChannelBinding.Kafka(isDefault = true),\n    val anypointmq: ChannelBinding.AnypointMQ = ChannelBinding.AnypointMQ(isDefault = true),\n    val amqp: ChannelBinding.AMQP = ChannelBinding.AMQP(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "a88c6724d395694fb456e1141d14b3b66392e1ce13d70454b4dba70c3e9a38ca"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"sqs\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 71,
      "offset": 16,
      "length": 3,
      "code": {
        "startLine": 69,
        "length": 3,
        "offset": 81,
        "surroundingCode": "        ServerBinding.Solace().apply(build).also { solace = it }\n\n    inline fun sqs(build: ServerBinding.SQS.() -> Unit): ServerBinding.SQS =\n        ServerBinding.SQS.apply(build).also { sqs = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "ab9364d5e1fe50f69112a51c83ce3d10fa0eccb989ec1670d0dc39b445959dcb"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"redis\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 77,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 75,
        "length": 5,
        "offset": 77,
        "surroundingCode": "        ServerBinding.STOMP.apply(build).also { stomp = it }\n\n    inline fun redis(build: ServerBinding.Redis.() -> Unit): ServerBinding.Redis =\n        ServerBinding.Redis.apply(build).also { redis = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "c7fc4ebd4cb28b0f304f29e18437cccb4b2faf573a7c9ac96863f380dab5e09c"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"schemaRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/channel/Parameter.kt",
      "language": "kotlin",
      "line": 28,
      "offset": 16,
      "length": 9,
      "code": {
        "startLine": 26,
        "length": 9,
        "offset": 67,
        "surroundingCode": "        Schema().apply(build).also { schema = it }\n\n    inline fun schemaRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { schema = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "c89ad462d8aef871d607526c16dbe2aa1ef5506c69d6c5e22a026a60d7918a75"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"trait\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/channel/MessageTrait.kt",
      "language": "kotlin",
      "line": 12,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 10,
        "length": 5,
        "offset": 88,
        "surroundingCode": "@AsyncApiComponent\nclass MessageTraitsList : ArrayList<MessageTrait>() {\n    inline fun trait(build: MessageTrait.() -> Unit): MessageTrait =\n        MessageTrait().apply(build).also { add(it) }\n}"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "cf8ffaa4fc541a7861de7284ee5cecd05158beed2d2c8f4b5ea105ab6878151d"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"sns\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/ChannelBinding.kt",
      "language": "kotlin",
      "line": 19,
      "offset": 9,
      "length": 3,
      "code": {
        "startLine": 17,
        "length": 3,
        "offset": 155,
        "surroundingCode": "    val nats: ChannelBinding.NATS = ChannelBinding.NATS(isDefault = true),\n    val jms: ChannelBinding.JMS = ChannelBinding.JMS(isDefault = true),\n    val sns: ChannelBinding.SNS = ChannelBinding.SNS(isDefault = true),\n    val solace: ChannelBinding.Solace = ChannelBinding.Solace(isDefault = true),\n    val sqs: ChannelBinding.SQS = ChannelBinding.SQS(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "d3fbd0f8f00ff8a3103218bb7b627a418db15ca200b0cb44aaa2d5ea53fe3431"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"mercure\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/ChannelBinding.kt",
      "language": "kotlin",
      "line": 24,
      "offset": 9,
      "length": 7,
      "code": {
        "startLine": 22,
        "length": 7,
        "offset": 164,
        "surroundingCode": "    val stomp: ChannelBinding.STOMP = ChannelBinding.STOMP(isDefault = true),\n    val redis: ChannelBinding.Redis = ChannelBinding.Redis(isDefault = true),\n    val mercure: ChannelBinding.Mercure = ChannelBinding.Mercure(isDefault = true),\n    val ibmmq: ChannelBinding.IBMMQ = ChannelBinding.IBMMQ(isDefault = true)\n)"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "d85d53d6419dfbc7986e31eb81fd43ad2a20fadc372626c0542ff20bbdc5edf5"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"mercure\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 80,
      "offset": 16,
      "length": 7,
      "code": {
        "startLine": 78,
        "length": 7,
        "offset": 77,
        "surroundingCode": "        ServerBinding.Redis.apply(build).also { redis = it }\n\n    inline fun mercure(build: ServerBinding.Mercure.() -> Unit): ServerBinding.Mercure =\n        ServerBinding.Mercure.apply(build).also { mercure = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "dc4ecd7d414af912c728399a4d26ca4ed31b8c05394d79bbb995f32e550dfb64"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"amqp1\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/ChannelBinding.kt",
      "language": "kotlin",
      "line": 14,
      "offset": 9,
      "length": 5,
      "code": {
        "startLine": 12,
        "length": 5,
        "offset": 176,
        "surroundingCode": "    val anypointmq: ChannelBinding.AnypointMQ = ChannelBinding.AnypointMQ(isDefault = true),\n    val amqp: ChannelBinding.AMQP = ChannelBinding.AMQP(isDefault = true),\n    val amqp1: ChannelBinding.AMQP1 = ChannelBinding.AMQP1(isDefault = true),\n    val mqtt: ChannelBinding.MQTT = ChannelBinding.MQTT(isDefault = true),\n    val mqtt5: ChannelBinding.MQTT5 = ChannelBinding.MQTT5(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "e315a2774b189feced35b88a2f30b74c83c19cc5720d990c304f72b1a0490a90"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"nats\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/ChannelBinding.kt",
      "language": "kotlin",
      "line": 17,
      "offset": 9,
      "length": 4,
      "code": {
        "startLine": 15,
        "length": 4,
        "offset": 161,
        "surroundingCode": "    val mqtt: ChannelBinding.MQTT = ChannelBinding.MQTT(isDefault = true),\n    val mqtt5: ChannelBinding.MQTT5 = ChannelBinding.MQTT5(isDefault = true),\n    val nats: ChannelBinding.NATS = ChannelBinding.NATS(isDefault = true),\n    val jms: ChannelBinding.JMS = ChannelBinding.JMS(isDefault = true),\n    val sns: ChannelBinding.SNS = ChannelBinding.SNS(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "e8e321a8361ad81d419658bb079f1333a16103a8fb2f33579f06b6988f44ba10"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"nats\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 59,
      "offset": 16,
      "length": 4,
      "code": {
        "startLine": 57,
        "length": 4,
        "offset": 77,
        "surroundingCode": "        ServerBinding.MQTT5.apply(build).also { mqtt5 = it }\n\n    inline fun nats(build: ServerBinding.NATS.() -> Unit): ServerBinding.NATS =\n        ServerBinding.NATS.apply(build).also { nats = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "f405f0262d3bbb93f3323e3ef174943dc880c53e17da11c9f2320cfae7dbb850"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Property \"stomp\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-annotation/src/main/kotlin/com/asyncapi/kotlinasyncapi/annotation/channel/ChannelBinding.kt",
      "language": "kotlin",
      "line": 22,
      "offset": 9,
      "length": 5,
      "code": {
        "startLine": 20,
        "length": 5,
        "offset": 161,
        "surroundingCode": "    val solace: ChannelBinding.Solace = ChannelBinding.Solace(isDefault = true),\n    val sqs: ChannelBinding.SQS = ChannelBinding.SQS(isDefault = true),\n    val stomp: ChannelBinding.STOMP = ChannelBinding.STOMP(isDefault = true),\n    val redis: ChannelBinding.Redis = ChannelBinding.Redis(isDefault = true),\n    val mercure: ChannelBinding.Mercure = ChannelBinding.Mercure(isDefault = true),"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-annotation",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "f592a97e568aa9449bd8e55c8368941ce21d159220920aa25bd9a96d8dacef19"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"trait\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/channel/MessageTrait.kt",
      "language": "kotlin",
      "line": 18,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 16,
        "length": 5,
        "offset": 102,
        "surroundingCode": "@AsyncApiComponent\nclass ReferencableMessageTraitsMap : LinkedHashMap<String, Any>() {\n    inline fun trait(key: String, build: MessageTrait.() -> Unit): MessageTrait =\n        MessageTrait().apply(build).also { put(key, it) }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "f850790824a46b1095e84e355da7374a9c04f91c3aa389e6ea912d4a3baa0365"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "tags": [
    "kotlin"
  ],
  "severity": "High",
  "comment": "Function \"ccdtQueueManagerName\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/com/asyncapi/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 154,
      "offset": 13,
      "length": 20,
      "code": {
        "startLine": 152,
        "length": 20,
        "offset": 53,
        "surroundingCode": "            value.also { groupId = it }\n\n        fun ccdtQueueManagerName(value: String): String =\n            value.also { ccdtQueueManagerName = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "fab9e105b4af4978b685e32218c0365efec0550c3398c660f351bc442b1fa87c"
}]}